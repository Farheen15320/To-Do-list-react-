{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\reactToDoApp\\\\todoapp\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //hooks create \n  const [inputTask, setinputTask] = useState(\"\");\n  const [items, setItems] = useState([]); //  [] -> empty array (currently)\n\n  const taskEvent = event => {\n    setinputTask(event.target.value); // setinputList -> inputList -> li\n  }; //jab button p click hota hai\n\n\n  const addTask = () => {\n    setItems(olditems => {\n      return [...olditems, inputTask]; //it will return the old list of task that is stored in the array using \"spread operator\"\n    });\n    setinputTask('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"heading\",\n          children: \"To Do List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"entertext\",\n          type: \"text\",\n          value: inputTask,\n          placeholder: \"Add task\",\n          onChange: taskEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTask,\n          children: \" + \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: items.map(itemval => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa fa-times\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: itemval\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"PcB58RiRn+MPjYd9WzYkJiCWY0M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/reactToDoApp/todoapp/src/App.jsx"],"names":["React","useState","App","inputTask","setinputTask","items","setItems","taskEvent","event","target","value","addTask","olditems","map","itemval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC,CAHc,CAGoC;;AAGlD,QAAMM,SAAS,GAAIC,KAAD,IAAW;AACzBJ,IAAAA,YAAY,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ,CADyB,CAEzB;AAEH,GAJD,CANc,CAYd;;;AACA,QAAMC,OAAO,GAAG,MAAM;AAClBL,IAAAA,QAAQ,CAAEM,QAAD,IAAc;AACnB,aAAM,CAAC,GAAGA,QAAJ,EAAcT,SAAd,CAAN,CADmB,CACkB;AAExC,KAHO,CAAR;AAIAC,IAAAA,YAAY,CAAC,EAAD,CAAZ;AAEH,GAPD;;AAYA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAKI;AACA,UAAA,SAAS,EAAC,WADV;AAEA,UAAA,IAAI,EAAC,MAFL;AAGA,UAAA,KAAK,EAAED,SAHP;AAIA,UAAA,WAAW,EAAC,UAJZ;AAKA,UAAA,QAAQ,EAAEI;AALV;AAAA;AAAA;AAAA;AAAA,gBALJ,eAaI;AAAQ,UAAA,OAAO,EAAEI,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAeI;AAAA,oBAMKN,KAAK,CAACQ,GAAN,CAAWC,OAAD,IAAa;AACpB,gCACI;AAAA,sCACA;AAAG,gBAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAA,0BAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA,4BADJ;AAOH,WARA;AANL;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAuCH,CAhED;;GAAMZ,G;;KAAAA,G;AAoEN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nconst App = () => {\r\n    //hooks create \r\n    const [inputTask, setinputTask] = useState(\"\");\r\n    const [items, setItems] = useState([]);           //  [] -> empty array (currently)\r\n\r\n\r\n    const taskEvent = (event) => {\r\n        setinputTask(event.target.value);\r\n        // setinputList -> inputList -> li\r\n\r\n    };\r\n\r\n    //jab button p click hota hai\r\n    const addTask = () => {\r\n        setItems((olditems) => {\r\n            return[...olditems, inputTask]       //it will return the old list of task that is stored in the array using \"spread operator\"\r\n\r\n        });\r\n        setinputTask('');\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='main_div'>\r\n                <div className=\"center_div\">\r\n                    <br />\r\n                    <h1 className=\"heading\">To Do List</h1>\r\n                    <br />\r\n\r\n                    <input \r\n                    className=\"entertext\" \r\n                    type=\"text\" \r\n                    value={inputTask}\r\n                    placeholder=\"Add task\" \r\n                    onChange={taskEvent}>\r\n                        {/* jab bhi kuch type krenge to \"onChange\" call hoga  */}\r\n                    </input>\r\n                    <button onClick={addTask}> + </button>\r\n\r\n                    <ul>\r\n                        {/* <li> {inputList} </li> */}\r\n\r\n                        {/* array k sath \"map\" method ka use kr skte hai...\r\n                        using it we are returning the \"task\" which is stored in the array\r\n                        1 by 1 */}\r\n                        {items.map((itemval) => {\r\n                            return(\r\n                                <>\r\n                                <i class=\"fa fa-times\"></i>\r\n                                <li>{itemval}</li> \r\n                                </>\r\n                                \r\n                            )                    \r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}