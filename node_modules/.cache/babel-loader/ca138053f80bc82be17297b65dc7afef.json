{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\reactToDoApp\\\\todoapp\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //hooks create \n  const [inputTask, setinputTask] = useState(\"\");\n  const [items, setItems] = useState([]); //  [] -> empty array (currently)\n\n  const taskEvent = event => {\n    setinputTask(event.target.value); // setinputList -> inputList -> li\n  }; //jab button p click hota hai\n\n\n  const addTask = () => {\n    setItems(olditems => {\n      return [...olditems, inputTask]; //it will return the old list of task that is stored in the array using \"spread operator\"\n    });\n    setinputTask('');\n  };\n\n  const deleteTask = () => {\n    console.log('Deleted');\n    setItems(olditems => {\n      return [];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"heading\",\n          children: \"To Do List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"entertext\",\n          type: \"text\",\n          value: inputTask,\n          placeholder: \"Add task\",\n          onChange: taskEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTask,\n          children: \" + \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: items.map(itemval => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"todo_style\",\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fas fa-times-circle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 37\n                  }, this), \" \", itemval, \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"checkbox\",\n                    type: \"checkbox\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 83\n                  }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-btn\",\n          onClick: deleteTask,\n          children: \"Task completed\\uD83D\\uDDD1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"PcB58RiRn+MPjYd9WzYkJiCWY0M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/reactToDoApp/todoapp/src/App.jsx"],"names":["React","useState","App","inputTask","setinputTask","items","setItems","taskEvent","event","target","value","addTask","olditems","deleteTask","console","log","map","itemval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC,CAHc,CAGoC;;AAGlD,QAAMM,SAAS,GAAIC,KAAD,IAAW;AACzBJ,IAAAA,YAAY,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ,CADyB,CAEzB;AAEH,GAJD,CANc,CAYd;;;AACA,QAAMC,OAAO,GAAG,MAAM;AAClBL,IAAAA,QAAQ,CAAEM,QAAD,IAAc;AACnB,aAAM,CAAC,GAAGA,QAAJ,EAAcT,SAAd,CAAN,CADmB,CACkB;AAExC,KAHO,CAAR;AAIAC,IAAAA,YAAY,CAAC,EAAD,CAAZ;AAEH,GAPD;;AASA,QAAMS,UAAU,GAAG,MAAM;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEAT,IAAAA,QAAQ,CAAEM,QAAD,IAAc;AACnB,aAAM,EAAN;AAEH,KAHO,CAAR;AAIH,GAPD;;AAYA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAKI;AACA,UAAA,SAAS,EAAC,WADV;AAEA,UAAA,IAAI,EAAC,MAFL;AAGA,UAAA,KAAK,EAAET,SAHP;AAIA,UAAA,WAAW,EAAC,UAJZ;AAKA,UAAA,QAAQ,EAAEI;AALV;AAAA;AAAA;AAAA;AAAA,gBALJ,eAaI;AAAQ,UAAA,OAAO,EAAEI,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAeI;AAAA,oBAMKN,KAAK,CAACW,GAAN,CAAWC,OAAD,IAAa;AACpB,gCACI;AAAA,qCAEA;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,uCACA;AAAA,0CAAI;AAAG,oBAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,0BAAJ,OAAyCA,OAAzC,oBAAkD;AAAO,oBAAA,SAAS,EAAC,UAAjB;AAA4B,oBAAA,IAAI,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,0BAAlD,eACA;AAAA;AAAA;AAAA;AAAA,0BADA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAFA,6BADJ;AAWH,WAZA;AANL;AAAA;AAAA;AAAA;AAAA,gBAfJ,eAmCI;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,OAAO,EAAEJ,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA4CH,CA9ED;;GAAMX,G;;KAAAA,G;AAkFN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nconst App = () => {\r\n    //hooks create \r\n    const [inputTask, setinputTask] = useState(\"\");\r\n    const [items, setItems] = useState([]);           //  [] -> empty array (currently)\r\n\r\n\r\n    const taskEvent = (event) => {\r\n        setinputTask(event.target.value);\r\n        // setinputList -> inputList -> li\r\n\r\n    };\r\n\r\n    //jab button p click hota hai\r\n    const addTask = () => {\r\n        setItems((olditems) => {\r\n            return[...olditems, inputTask]       //it will return the old list of task that is stored in the array using \"spread operator\"\r\n\r\n        });\r\n        setinputTask('');\r\n\r\n    };\r\n\r\n    const deleteTask = () => {\r\n        console.log('Deleted');\r\n    \r\n        setItems((olditems) => {            \r\n            return[]\r\n           \r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='main_div'>\r\n                <div className=\"center_div\">\r\n                    <br />\r\n                    <h1 className=\"heading\">To Do List</h1>\r\n                    <br />\r\n\r\n                    <input \r\n                    className=\"entertext\" \r\n                    type=\"text\" \r\n                    value={inputTask}\r\n                    placeholder=\"Add task\" \r\n                    onChange={taskEvent}>\r\n                        {/* jab bhi kuch type krenge to \"onChange\" call hoga  */}\r\n                    </input>\r\n                    <button onClick={addTask}> + </button>\r\n\r\n                    <ul>\r\n                        {/* <li> {inputList} </li> */}\r\n\r\n                        {/* array k sath \"map\" method ka use kr skte hai...\r\n                        using it we are returning the \"task\" which is stored in the array\r\n                        1 by 1 */}\r\n                        {items.map((itemval) => {\r\n                            return(\r\n                                <>\r\n                                \r\n                                <div className=\"todo_style\">\r\n                                <li><i class=\"fas fa-times-circle\"></i> {itemval} <input className=\"checkbox\" type=\"checkbox\" ></input>\r\n                                <hr /></li> \r\n                                </div>\r\n                                \r\n                                </>\r\n                                \r\n                            )                    \r\n                        })}\r\n                    </ul>\r\n                    <button className=\"delete-btn\" onClick={deleteTask}>Task completedüóëÔ∏è</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}